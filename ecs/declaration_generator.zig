const std = @import("std");
const Self = @This();

generators: std.ArrayList(*const fn (std.io.AnyWriter) anyerror!void),
outpath: []const u8,

pub fn init(outpath: []const u8, allocator: std.mem.Allocator) Self {
    return .{
        .outpath = outpath,
        .generators = .init(allocator),
    };
}

pub fn deinit(self: Self) void {
    self.generators.deinit();
}

pub fn registerComponentsForBuild(self: *Self, comptime Comps: anytype) !void {
    inline for (Comps) |c| {
        try self.registerComponentForBuild(c);
    }
}
pub fn registerComponentForBuild(self: *Self, comptime Comp: type) !void {
    try self.generators.append(@ptrCast(&Comp.luaGenerateStubFile));
}

pub fn generate(self: *Self) anyerror!void {
    const cwd = std.fs.cwd();
    var file = try cwd.createFile(
        self.outpath,
        .{ .truncate = true },
    );
    defer file.close();
    const writer = file.writer();
    try writer.writeAll("-- AUTOGENERATED BY ECS BUILD STEP\n");
    try writer.writeAll("-- DO NOT EDIT\n");
    try writer.writeAll("---@meta\n\n");
    for (self.generators.items) |func| {
        try func(writer.any());
    }
}
